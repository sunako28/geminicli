# .github/workflows/ga4-analytics-production.yml
name: GA4 Analytics Production

on:
  workflow_dispatch:
    inputs:
      analysis_period:
        description: '分析期間'
        required: false
        default: 'yesterday'
        type: choice
        options:
        - 'yesterday'
        - '7daysAgo'
        - '30daysAgo'
      analysis_type:
        description: '分析タイプ'
        required: false
        default: 'comprehensive'
        type: choice
        options:
        - 'basic'
        - 'comprehensive'
        - 'performance'
        - 'traffic'
  schedule:
    # 毎日午前10時（JST）に実行
    - cron: '0 1 * * *'
  issue_comment:
    types: [created]

jobs:
  ga4-web-analysis:
    if: |
      github.event_name == 'workflow_dispatch' ||
      github.event_name == 'schedule' ||
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@gemini analytics'))
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Install GA4 Dependencies
        run: |
          npm install @google-analytics/data@^4.0.0
          npm install googleapis@^128.0.0
          echo "GA4 dependencies installed successfully"
          
      - name: Verify GA4 Setup
        run: |
          echo "=== GA4 Setup Verification ==="
          echo "Property ID exists: ${{ secrets.GA_PROPERTY_ID != '' }}"
          echo "Credentials exist: ${{ secrets.GA_CREDENTIALS != '' }}"
          
          # 基本的な接続テスト
          cat > test-ga4-connection.js << 'EOF'
          const { BetaAnalyticsDataClient } = require('@google-analytics/data');
          
          async function testConnection() {
            try {
              const credentials = JSON.parse(process.env.GOOGLE_ANALYTICS_CREDENTIALS);
              const client = new BetaAnalyticsDataClient({ credentials });
              
              console.log('✅ GA4 Client created successfully');
              console.log('📊 Property ID:', process.env.GOOGLE_ANALYTICS_PROPERTY_ID);
              console.log('🔑 Project ID:', credentials.project_id);
              
              // Simple test query
              const [response] = await client.runReport({
                property: `properties/${process.env.GOOGLE_ANALYTICS_PROPERTY_ID}`,
                dateRanges: [{ startDate: 'yesterday', endDate: 'yesterday' }],
                metrics: [{ name: 'activeUsers' }]
              });
              
              console.log('✅ Test query successful');
              console.log('📈 Data rows returned:', response.rowCount || 0);
              
            } catch (error) {
              console.error('❌ GA4 connection failed:', error.message);
              process.exit(1);
            }
          }
          
          testConnection();
          EOF
          
          node test-ga4-connection.js
        env:
          GOOGLE_ANALYTICS_PROPERTY_ID: ${{ secrets.GA_PROPERTY_ID }}
          GOOGLE_ANALYTICS_CREDENTIALS: ${{ secrets.GA_CREDENTIALS }}
          
      - name: Generate GA4 Analysis Report
        uses: google-gemini/gemini-cli-action@main
        env:
          GH_TOKEN: ${{ github.token }}
        with:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          prompt: |
            ## GA4 Web分析レポート生成
            
            Google Analytics 4のデータを使用して、包括的なWeb分析レポートを作成してください。
            
            ### 📊 分析パラメータ
            - **分析期間**: ${{ github.event.inputs.analysis_period || 'yesterday' }}
            - **分析タイプ**: ${{ github.event.inputs.analysis_type || 'comprehensive' }}
            - **実行時刻**: ${{ github.run_started_at }}
            - **トリガー**: ${{ github.event_name }}
            
            ### 🔧 利用可能なGA4データ
            GA4接続テストが成功したので、以下のデータが取得可能です：
            - ページビュー数
            - アクティブユーザー数
            - セッション情報
            - デバイス別データ
            - 流入経路データ
            - 地域別データ
            
            ### 📋 レポート作成指示
            
            以下のコマンドでIssueを作成してください：
            
            ```bash
            gh issue create \
              --title "📊 GA4分析レポート - $(date '+%Y-%m-%d %H:%M')" \
              --body "# 📊 Google Analytics 4 Web分析レポート
            
            ## 🎯 分析概要
            - **分析期間**: ${{ github.event.inputs.analysis_period || 'yesterday' }}
            - **分析タイプ**: ${{ github.event.inputs.analysis_type || 'comprehensive' }}
            - **実行時刻**: ${{ github.run_started_at }}
            - **データソース**: Google Analytics 4
            
            ## 📈 主要指標
            
            ### 基本メトリクス
            | 指標 | 値 | 前日比 | ステータス |
            |------|----|----|--------|
            | ページビュー | [取得データ] | [変化率] | [評価] |
            | アクティブユーザー | [取得データ] | [変化率] | [評価] |
            | セッション数 | [取得データ] | [変化率] | [評価] |
            | 直帰率 | [取得データ] | [変化率] | [評価] |
            | 平均セッション時間 | [取得データ] | [変化率] | [評価] |
            
            ## 📱 デバイス別分析
            
            | デバイス | ユーザー数 | セッション数 | 直帰率 |
            |---------|-----------|------------|--------|
            | デスクトップ | [データ] | [データ] | [データ] |
            | モバイル | [データ] | [データ] | [データ] |
            | タブレット | [データ] | [データ] | [データ] |
            
            ### 📊 デバイス別インサイト
            - **モバイル最適化**: [評価と提案]
            - **デスクトップ体験**: [評価と提案]
            - **レスポンシブ対応**: [評価と提案]
            
            ## 🌐 流入経路分析
            
            | チャネル | セッション数 | 新規ユーザー | コンバージョン |
            |---------|------------|------------|--------------|
            | オーガニック検索 | [データ] | [データ] | [データ] |
            | ダイレクト | [データ] | [データ] | [データ] |
            | ソーシャル | [データ] | [データ] | [データ] |
            | リファラル | [データ] | [データ] | [データ] |
            | 有料検索 | [データ] | [データ] | [データ] |
            
            ### 🎯 流入経路インサイト
            - **最も効果的なチャネル**: [分析結果]
            - **成長機会**: [具体的な提案]
            - **改善が必要な領域**: [問題点と解決策]
            
            ## 📄 人気ページ分析
            
            | ページ | ページビュー | 滞在時間 | 直帰率 |
            |--------|-------------|---------|--------|
            | [ページ1] | [データ] | [データ] | [データ] |
            | [ページ2] | [データ] | [データ] | [データ] |
            | [ページ3] | [データ] | [データ] | [データ] |
            
            ## 🗺️ 地域別分析
            
            | 国/地域 | ユーザー数 | セッション数 | 平均セッション時間 |
            |---------|-----------|------------|------------------|
            | [地域1] | [データ] | [データ] | [データ] |
            | [地域2] | [データ] | [データ] | [データ] |
            | [地域3] | [データ] | [データ] | [データ] |
            
            ## 🚨 要注意事項
            
            ### 🔴 緊急対応が必要
            - [緊急性の高い問題]
            
            ### 🟡 改善推奨
            - [中期的な改善項目]
            
            ### 🟢 好調な項目
            - [継続すべき良い傾向]
            
            ## 💡 具体的改善提案
            
            ### 短期改善（1週間以内）
            1. **[改善項目1]**
               - 現状: [問題の詳細]
               - 提案: [具体的な解決策]
               - 期待効果: [定量的な効果予測]
               - 実装工数: [必要時間の見積]
            
            2. **[改善項目2]**
               - 現状: [問題の詳細]
               - 提案: [具体的な解決策]
               - 期待効果: [定量的な効果予測]
               - 実装工数: [必要時間の見積]
            
            ### 中長期改善（1ヶ月以内）
            1. **[戦略的改善項目]**
               - 背景: [改善の必要性]
               - 提案: [包括的なソリューション]
               - 期待効果: [ビジネスインパクト]
               - 実装計画: [段階的な実装ステップ]
            
            ## 📋 アクションプラン
            
            ### 今週の優先事項
            - [ ] [具体的なタスク1]
            - [ ] [具体的なタスク2]
            - [ ] [具体的なタスク3]
            
            ### 来月までの目標
            - [ ] [中期目標1]
            - [ ] [中期目標2]
            
            ## 📞 次回分析での確認事項
            - 今回の改善提案の効果測定
            - 新しいトレンドの確認
            - 競合他社との比較分析
            
            ## 🤖 追加分析の依頼
            より詳細な分析が必要な場合：
            - \`@gemini analytics detailed\` - 詳細分析
            - \`@gemini analytics funnel\` - コンバージョンファネル分析
            - \`@gemini analytics compare [期間]\` - 期間比較
            - \`@gemini analytics mobile\` - モバイル特化分析
            
            ---
            
            **📊 データ取得状況**: ✅ GA4接続成功  
            **🤖 生成システム**: Gemini CLI + GA4 MCP  
            **📅 次回自動実行**: 明日 10:00 AM (JST)  
            
            *このレポートは実際のGA4データに基づいて生成されています*"
            ```
            
            ### 🚨 重要な指示
            1. 上記のコマンドを必ず実行してください
            2. [取得データ] の部分は実際のGA4データで置き換えてください
            3. 分析結果は具体的で実装可能な内容にしてください
            4. エラーが発生した場合も、その旨をレポートに含めてください
            
            ### 🔄 実行開始
            今すぐGA4データを取得して、上記のIssueを作成してください。

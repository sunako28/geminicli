name: Gemini GA4 Summary   # ワークフロー全体の名前（1回だけ）

on:
  workflow_dispatch: {}
  schedule:
    - cron: '0 23 * * *'  # 毎日 日本時間08:00（UTC 23:00）

jobs:
  summarize-ga4:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: read
      id-token: write
      # issues: write  # ← Issue投稿したい場合は有効化

    steps:
      - name: Prepare GOOGLE_PRIVATE_KEY with real newlines
        run: |
          # \n → 実改行に変換してファイルに保存
          printf '%b' "${{ secrets.GOOGLE_PRIVATE_KEY }}" > private_key.pem
          # 環境変数にマルチライン形式で設定（EOFは裸で書く）
          echo "GOOGLE_PRIVATE_KEY<<EOF" >> $GITHUB_ENV
          cat private_key.pem >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Run Gemini GA4 Summary via MCP
        id: ga4
        uses: google-gemini/gemini-cli-action@main
        env:
          GOOGLE_CLIENT_EMAIL: ${{ secrets.GOOGLE_CLIENT_EMAIL }}
          GOOGLE_PRIVATE_KEY: ${{ env.GOOGLE_PRIVATE_KEY }}
          GA_PROPERTY_ID: ${{ secrets.GA_PROPERTY_ID }}
        with:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          settings_json: |
            {
              "mcpServers": {
                "google-analytics": {
                  "command": "npx",
                  "args": ["-y", "mcp-server-google-analytics"],
                  "env": {
                    "GOOGLE_CLIENT_EMAIL": "$GOOGLE_CLIENT_EMAIL",
                    "GOOGLE_PRIVATE_KEY": "$GOOGLE_PRIVATE_KEY",
                    "GA_PROPERTY_ID": "$GA_PROPERTY_ID"
                  }
                }
              },
              "coreTools": ["mcp__google-analytics__run_report"]
            }
          prompt: |
            あなたはGA4の要約アシスタントです。
            環境変数 GA_PROPERTY_ID のプロパティについて、昨日（プロパティのTZ）を対象に
            mcp__google-analytics__run_report を使って
            - 主なトラフィックソース
            - 人気ページ
            - 主なコンバージョンイベント
            を取得・短い段落＋箇条書きで要約してください。
            可能なら先週同曜日比や前日比も一言で補足してください。

      # - name: Create GitHub issue with summary
      #   uses: actions/github-script@v7
      #   permissions:
      #     issues: write
      #   with:
      #     script: |
      #       const today = new Date().toISOString().slice(0,10);
      #       const title = `GA4 日次要約 (${today})`;
      #       const body = ${{ toJSON(steps.ga4.outputs.gemini_result) }};
      #       await github.rest.issues.create({
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         title,
      #         body
      #       });

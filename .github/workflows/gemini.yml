name: GA4 Analytics Summary
on:
  workflow_dispatch: {}
  schedule:
    - cron: '0 1 * * *'  # 毎日日本時間10時（UTC 1時）
  issue_comment:
    types: [created]
jobs:
  analyze-ga4:
    if: |
      github.event_name == 'workflow_dispatch' ||
      github.event_name == 'schedule' ||
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@gemini ga4'))
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: read
      issues: write
      id-token: write
    steps:
      - name: Run GA4 Analytics Summary
        uses: google-gemini/gemini-cli-action@main
        env:
          GOOGLE_CLIENT_EMAIL: ${{ secrets.GOOGLE_CLIENT_EMAIL }}
          GOOGLE_PRIVATE_KEY: ${{ secrets.GOOGLE_PRIVATE_KEY }}
          GA_PROPERTY_ID: ${{ secrets.GA_PROPERTY_ID }}
          GH_TOKEN: ${{ github.token }}
        with:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          settings_json: |
            {
              "mcpServers": {
                "google-analytics": {
                  "command": "npx",
                  "args": ["-y", "mcp-server-google-analytics@latest"],
                  "env": {
                    "GOOGLE_CLIENT_EMAIL": "$GOOGLE_CLIENT_EMAIL",
                    "GOOGLE_PRIVATE_KEY": "$GOOGLE_PRIVATE_KEY",
                    "GA_PROPERTY_ID": "$GA_PROPERTY_ID"
                  }
                }
              }
            }
          prompt: |
            あなたは GA4 データ分析アシスタントです。
            
            ## 🔧 接続テスト & データ取得
            
            1. **MCPサーバー接続確認:**
            ```
            google-analytics MCPサーバーが正常に動作しているか確認してください
            ```
            
            2. **利用可能な機能確認:**
            ```
            google-analytics サーバーで利用可能な機能をリストアップしてください
            ```
            
            3. **基本データ取得:**
            ```
            プロパティ ${{ secrets.GA_PROPERTY_ID }} から昨日のページビューデータを取得してください
            ```
            
            4. **GitHub Issue作成:**
            
            データ取得後、以下の形式でGitHub Issueを作成してください：

            タイトル: "📊 GA4分析テスト - $(date '+%Y-%m-%d')"

            内容:
            ```
            # 📊 GA4 MCP接続テスト結果

            ## 🔧 接続状況
            - **MCPサーバー**: [成功/失敗]
            - **利用可能機能**: [確認できた機能数]
            - **データ取得**: [成功/失敗]

            ## 📊 取得データ
            [実際に取得できたデータまたはエラー情報]

            ## 💡 結果
            - ✅ 成功した場合: MCPサーバー経由でGA4データ取得が可能
            - ❌ 失敗した場合: [具体的なエラー内容と対処法]

            ## 🔄 次のステップ
            [成功時は本格的な分析機能追加、失敗時は代替手段検討]

            ---
            📊 テスト実行: $(date '+%Y-%m-%d %H:%M JST')
            ```

            ## ⚡ 重要な指示

            1. **各ステップを順次実行してください**
            2. **エラーが出た場合は詳細情報を記録してください**
            3. **成功した場合は実際のデータを含めてください**
            4. **最後に必ずGitHub Issueを作成してください**

            今すぐテストを開始してください！

name: Gemini GA4 Summary

on:
  workflow_dispatch: {}
  schedule:
    - cron: '0 23 * * *'  # 毎日 日本時間08:00（UTC 23:00）

permissions:
  contents: read
  issues: write

jobs:
  summarize-ga4:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Run Gemini GA4 Summary via MCP (JS server)
        id: ga4
        uses: google-gemini/gemini-cli-action@main
        env:
          # GA4認証（改行ありのPEMをそのままSecretに保存して使う）
          GOOGLE_CLIENT_EMAIL: ${{ secrets.GOOGLE_CLIENT_EMAIL }}
          GOOGLE_PRIVATE_KEY: ${{ secrets.GOOGLE_PRIVATE_KEY }}
          GA_PROPERTY_ID:     ${{ secrets.GA_PROPERTY_ID }}
        with:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          settings_json: |
            {
              "mcpServers": {
                "google-analytics": {
                  "command": "npx",
                  "args": ["-y", "mcp-server-google-analytics"],
                  "env": {
                    "GOOGLE_CLIENT_EMAIL": "$GOOGLE_CLIENT_EMAIL",
                    "GOOGLE_PRIVATE_KEY": "$GOOGLE_PRIVATE_KEY",
                    "GA_PROPERTY_ID": "$GA_PROPERTY_ID"
                  }
                }
              },
              "coreTools": ["mcp__google-analytics__run_report"]
            }
          prompt: |
            あなたはGA4の要約アシスタントです。
            GA_PROPERTY_ID のプロパティについて、昨日（プロパティのタイムゾーン）を対象に
            - 主なトラフィックソース（source/medium）
            - 人気ページ（pagePath 等）
            - 主なコンバージョンイベント
            を mcp__google-analytics__run_report で取得・要約してください。
            可能なら前日比/先週同曜日比も一言で補足してください。

      - name: Create GitHub Issue with Summary
        uses: actions/github-script@v7
        env:
          # アクションの出力名ゆらぎに対応
          GEMINI_RESULT:   ${{ steps.ga4.outputs.gemini_result }}
          GEMINI_RESPONSE: ${{ steps.ga4.outputs.gemini_response }}
        with:
          github-token: ${{ github.token }}
          script: |
            const today = new Date().toISOString().split('T')[0];
            const title = `GA4サマリー (${today})`;

            // どちらかに入っている本文を優先採用（どちらも空ならフォールバック）
            const bodyRaw = process.env.GEMINI_RESULT || process.env.GEMINI_RESPONSE || '';
            const body = (bodyRaw && bodyRaw.trim().length > 0)
              ? bodyRaw
              : 'GA4集計結果が取得できませんでした。';

            const { data: issue } = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title,
              body
            });
            core.info(`✅ Issue #${issue.number} を作成しました`);

      # --- 任意: デバッグ（本文が空のときだけ一度有効化）---
      # - name: Debug gemini outputs (optional)
      #   if: always()
      #   run: |
      #     echo "len(gemini_result)=${#GEMINI_RESULT}"
      #     echo "len(gemini_response)=${#GEMINI_RESPONSE}"
      #   env:
      #     GEMINI_RESULT:   ${{ steps.ga4.outputs.gemini_result }}
      #     GEMINI_RESPONSE: ${{ steps.ga4.outputs.gemini_response }}

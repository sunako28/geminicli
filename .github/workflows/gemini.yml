name: Gemini GA4 Summary

on:
  workflow_dispatch: {}
  schedule:
    - cron: '0 23 * * *'  # 毎日 08:00 JST（UTC 23:00）

jobs:
  summarize-ga4:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: read
      id-token: write
      # issues: write  # ← Issue作成もするなら有効化

    steps:
      # 1) GOOGLE_PRIVATE_KEY_B64 を復号 → マスク → 環境変数へ（マルチライン）
      - name: Decode & mask private key
        run: |
          set -euo pipefail
          # 復号（Secretsのbase64からPEMへ）
          echo '${{ secrets.GOOGLE_PRIVATE_KEY_B64 }}' | base64 --decode > private_key.pem
          chmod 600 private_key.pem

          # マスク（base64原文／復号後PEM／末尾改行なしPEM）
          echo "::add-mask::${{ secrets.GOOGLE_PRIVATE_KEY_B64 }}"
          echo "::add-mask::$(cat private_key.pem)"
          perl -pe 'chomp if eof' private_key.pem > pk_noeol.pem
          echo "::add-mask::$(cat pk_noeol.pem)"
          rm -f pk_noeol.pem

          # GITHUB_ENV にマルチラインで登録（裸の EOF）
          {
            echo "GOOGLE_PRIVATE_KEY<<EOF"
            cat private_key.pem
            echo "EOF"
          } >> "$GITHUB_ENV"

          # 復号ファイルは削除（痕跡を残さない）
          shred -u private_key.pem || rm -f private_key.pem

      # 2) GA4要約（JS版 mcp-server-google-analytics 使用）
      - name: Run Gemini GA4 Summary via MCP
        id: ga4
        uses: google-gemini/gemini-cli-action@main
        env:
          GOOGLE_CLIENT_EMAIL: ${{ secrets.GOOGLE_CLIENT_EMAIL }}
          GOOGLE_PRIVATE_KEY: ${{ env.GOOGLE_PRIVATE_KEY }}   # ← 復号後のPEM（マスク済み）
          GA_PROPERTY_ID: ${{ secrets.GA_PROPERTY_ID }}       # 数字のみのProperty ID
        with:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          settings_json: |
            {
              "mcpServers": {
                "google-analytics": {
                  "command": "npx",
                  "args": ["-y", "mcp-server-google-analytics"],
                  "env": {
                    "GOOGLE_CLIENT_EMAIL": "$GOOGLE_CLIENT_EMAIL",
                    "GOOGLE_PRIVATE_KEY": "$GOOGLE_PRIVATE_KEY",
                    "GA_PROPERTY_ID": "$GA_PROPERTY_ID"
                  }
                }
              },
              "coreTools": ["mcp__google-analytics__run_report"]
            }
          prompt: |
            あなたはGA4の要約アシスタントです。
            GA_PROPERTY_ID のプロパティについて、昨日（プロパティのTZ）を対象に
            - 主なトラフィックソース
            - 人気ページ
            - 主なコンバージョンイベント
            を mcp__google-analytics__run_report で取得・要約してください。
            可能なら前日比/先週同曜日比も一言で補足してください。

      # 3) （任意）Issue投稿
      # - name: Create GitHub issue with summary
      #   uses: actions/github-script@v7
      #   permissions:
      #     issues: write
      #   with:
      #     script: |
      #       const title = `GA4 日次要約 (${new Date().toISOString().slice(0,10)})`;
      #       const body = ${{ toJSON(steps.ga4.outputs.gemini_result) }};
      #       await github.rest.issues.create({ owner: context.repo.owner, repo: context.repo.repo, title, body });
